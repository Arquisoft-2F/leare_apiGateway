version: '3.8'

services:
# visualizer
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8888:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - leare-network

# Gateway
  leare-gateway:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-leare-gateway:gcp
    ports:
      - "5555:5555"
    volumes:
      - gateway_logs:/app/logs
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-gateway
          - node.role == manager
    networks:
      - leare-network
  # auth_ms

  auth-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    volumes:
      - auth_data:/var/opt/mssql/data
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Password123
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    networks:
      - leare-network

  auth-web:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-auth-web:gcp
    depends_on:
      - auth-db
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-ms
    networks:
      - leare-network

  # chat_ms

  chat-db:
    image: mongo:7.0
    volumes:
      - chat_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    networks:
      - leare-network

  chat-web:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-chat-web:gcp
    depends_on:
      - chat-db
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-ms
    networks:
      - leare-network


  # courses_ms
  courses-db:
    image: postgres:16.2-alpine
    volumes:
      - courses_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_PORT=5490
    command: -p 5490
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    networks:
      - leare-network

  courses-web:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-courses-web:gcp
    depends_on:
      - courses-db
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-ms
    networks:
      - leare-network


  #document_ms
  document-rabbit:
    image: rabbitmq:management
    environment:
      - RABBITMQ_DEFAULT_USER=arquisoft
      - RABBITMQ_DEFAULT_PASS=password
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q check_running"]
      interval: 50s
      timeout: 4s
      retries: 5
      start_period: 3m
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    networks:
      - leare-network

  document-db:
    image: "amazon/dynamodb-local:latest"
    command: "-jar DynamoDBLocal.jar -sharedDb -port 3014"
    working_dir: /home/dynamodblocal
    volumes:
     - dynamodb_data:/home/dynamodblocal
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:3014 | grep -E '400|200'"]
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 40s
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    networks:
      - leare-network

    
  file-storage:
    image: localstack/localstack:s3-latest
    environment:
      - services=s3
      - DEBUG=${DEBUG:-0}
    volumes:
      - "file_storage_data:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    networks:
      - leare-network

  document-server:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-document-server:gcp
    command: "mkdir temp && mkdir logs"
    volumes:
      - ../leare_document_ms/temp:/temp
      - ../leare_document_ms/logs:/logs
    depends_on:
      - document-db
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-ms
    networks:
      - leare-network

  document-sidecar:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-document-sidecar:gcp
    command: "mkdir temp && mkdir logs"
    volumes:
      - ../leare_document_ms/temp:/temp
      - ../leare_document_ms/logs:/logs
    depends_on:
      - document-db
      - document-rabbit
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-ms
    networks:
      - leare-network


  # search_ms

  search-db:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    networks:
      - leare-network

  search-web:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-search-web:gcp
    environment:
      - ROCKET_ADDRESS=0.0.0.0
      - ROCKET_PORT=3005
      - ELASTICSEARCH_URL=http://search-db:9200
      # - ELASTICSEARCH_URL=http://elastic:password@search-db:9200
      - ES_USERNAME=elastic
      - ES_PASSWORD=password
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-ms
    depends_on:
      - search-db
    networks:
      - leare-network

  # user_ms
  users-db:
    image: mariadb
    volumes:
      - users_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: my_app_development
      # MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_ROOT_PASSWORD: password
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    networks:
      - leare-network

  users-web:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-users-web:gcp
    depends_on:
      - users-db
    environment:
      # DATABASE_URL: mysql2://root@users-db/my_app_development
      DATABASE_URL: mysql2://root:password@users-db/my_app_development
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-ms
    networks:
      - leare-network


  # ws
  ws:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-ws:gcp
    ports:
      - "8001:8001"
    environment:
      CHAT_MS_URL: "http://chat-web:3002"
    depends_on:
      - chat-web
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-gateway
          - node.role == manager
    networks:
      - leare-network

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
  dynamodb_data:
    driver: local
  gateway_logs:
    driver: local
  courses_data:
    driver: local
  auth_data:
    driver: local
  chat_data:
    driver: local
  users_data:
    driver: local
    


networks:
  leare-network:
    external: true
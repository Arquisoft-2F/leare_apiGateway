version: '3.8'
services:
  #MARK: Master
  movil-proxy:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-movil-proxy:gcp
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-master
          - node.role == manager
    networks:
      - leare-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8080:8080"
    volumes: 
      - "/:/rootfs"
      - "/var/run:/var/run"
      - "/sys:/sys"
      - "/var/lib/docker/:/var/lib/docker"
      - "/dev/disk/:/dev/disk"
    privileged: true
    devices: 
      - "/dev/kmsg"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-master
          - node.role == manager
    networks:
      - leare-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes: 
      - /home/david/leare/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:z
    privileged: true
    depends_on:
      - cadvisor
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-master
          - node.role == manager
    networks:
      - leare-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - DS_PROMETHEUS=prometheus
    volumes: 
      - grafana-data:/var/lib/grafana
      - /home/david/leare/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:z
      # - /home/david/leare/grafana/dashboard.json:/var/lib/grafana/dashboards/dashboard.json:z
      - /home/david/leare/grafana/default.yaml:/etc/grafana/provisioning/dashboards/default.yaml:z
    privileged: true
    depends_on:
      - prometheus
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-master
          - node.role == manager
    networks:
      - leare-network

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - target: 8080
        published: 8888
        protocol: tcp
        mode: ingress
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - leare-network
#MARK: API

# Gateway
  leare-gateway:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-leare-gateway:gcp
    ports:
      - target: 5555
        published: 5555
        protocol: tcp
        mode: host
    volumes:
      - gateway_logs:/app/logs
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.rack == leare-gateway
        preferences:
          - spread: node.id
    networks:
      - leare-network
 
 # ws
  ws:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-ws:gcp
    ports:
      - target: 8001
        published: 8001
        protocol: tcp
        mode: host
    environment:
      CHAT_MS_URL: "http://chat-web:3002"
    depends_on:
      - chat-web
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.rack == leare-gateway
        preferences:
            - spread: node.id
    networks:
      - leare-network

    
  phpldapadmin:
    image: osixia/phpldapadmin:latest
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "leare-ldap"
      PHPLDAPADMIN_HTTPS: "false"
    ports:
      - "8085:80"
    depends_on:
      - leare-ldap
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-gateway
    networks:
      - leare-network
  #MARK: front
  front:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/front:gcp
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-front
    networks:
      - leare-network



 #MARK: leare-db

 # auth_ms
  auth-db:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-auth-db:gcp
    user: root
    volumes:
      - auth_data:/var/opt/mssql/data
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Password123
    # command: /bin/bash -c "chown -R mssql:mssql /var/opt/mssql && chmod -R 770 /var/opt/mssql && su - mssql -c '/opt/mssql/bin/sqlservr'"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    networks:
      - leare-network


  # chat_ms
  chat-db:
    image: mongo:7.0
    volumes:
      - chat_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    networks:
      - leare-network


  # courses_ms
  courses-db:
    image: postgres:16.2-alpine
    volumes:
      - courses_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_PORT=5490
    ports:
      - 5490:5490
    command: ["sh", "-c", "while true; do sleep 1000; done"]
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.rack != leare-master
          - node.labels.rack != leare-gateway
          - node.labels.rack != leare-front
          - node.labels.rack != leare-ms
        preferences:
          - spread: node.id
    networks:
      - leare-network


  #document_ms
  document-rabbit:
    image: rabbitmq:management
    environment:
      - RABBITMQ_DEFAULT_USER=arquisoft
      - RABBITMQ_DEFAULT_PASS=password
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q check_running"]
      interval: 50s
      timeout: 4s
      retries: 5
      start_period: 3m
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    networks:
      - leare-network

  document-db:
    image: "amazon/dynamodb-local:latest"
    command: "-jar DynamoDBLocal.jar -sharedDb -port 3014"
    working_dir: /home/dynamodblocal
    volumes:
     - dynamodb_data:/home/dynamodblocal
    healthcheck:
      test: ["CMD-SHELL", "curl -s -o /dev/null -w '%{http_code}' http://localhost:3014 | grep -E '400|200'"]
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 40s
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    networks:
      - leare-network

    
  # file-storage:
  #   image: localstack/localstack:s3-latest
  #   environment:
  #     - services=s3
  #     - DEBUG=${DEBUG:-0}
  #   volumes:
  #     - "file_storage_data:/var/lib/localstack"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   deploy:
  #     replicas: 1
  #     placement:
  #       constraints:
  #         - node.labels.rack == leare-db
  #   networks:
  #     - leare-network

# search_ms

  search-db:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    networks:
      - leare-network
# user_ms
  users-db:
    image: mariadb
    volumes:
      - users_data:/var/lib/mysql
      - users_master:/etc/mysql
    environment:
      MYSQL_DATABASE: my_app_development
      # MYSQL_ALLOW_EMPTY_PASSWORD: "true"
      MYSQL_ROOT_PASSWORD: password
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.rack != leare-master
          - node.labels.rack != leare-gateway
          - node.labels.rack != leare-front
          - node.labels.rack != leare-ms
        
        preferences:
            - spread: node.id
    networks:
      - leare-network


  leare-ldap:
    image: osixia/openldap:1.1.8
    environment:
      COMPOSE_HTTP_TIMEOUT: 200
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "Leare"
      LDAP_DOMAIN: "leare.co"
      LDAP_BASE_DN: ""
      LDAP_ADMIN_PASSWORD: "admin"
      LDAP_CONFIG_PASSWORD: "config"
      LDAP_READONLY_USER: "false"
      LDAP_BACKEND: "hdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
      LDAP_TLS_PROTOCOL_MIN: "3.1"
      LDAP_TLS_VERIFY_CLIENT: "demand"
      LDAP_REPLICATION: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
    tty: true
    stdin_open: true
    volumes:
      - ldap_data_1:/var/lib/ldap
      - ldap_data_2:/etc/ldap/slapd.d
      - ldap_data_3:/container/service/slapd/assets/certs/
    ports:
      - "389:389"
      - "636:636"
    hostname: "leare.co"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.rack == leare-db
    networks:
      - leare-network
  

  #MARK: leare-ms
  
 # auth_ms
  auth-web:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-auth-web:gcp
    depends_on:
      - auth-db
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.rack == leare-ms
        preferences:
            - spread: node.id
    networks:
      - leare-network

  # chat_ms
  chat-web:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-chat-web:gcp
    depends_on:
      - chat-db
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.rack == leare-ms
        preferences:
            - spread: node.id
    networks:
      - leare-network


  # courses_ms
  courses-web:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-courses-web:gcp
    depends_on:
      - courses-db
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.rack == leare-ms
        preferences:
            - spread: node.id
    networks:
      - leare-network


  #document_ms
  document-server:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-document-server:gcp
    # command: "mkdir temp && mkdir logs"
    volumes:
      - document_temp:/temp
    #   - document_logs:/logs
    depends_on:
      - document-db
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.rack == leare-ms
        preferences:
            - spread: node.id
    networks:
      - leare-network

  document-sidecar:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-document-sidecar:gcp
    # command: "mkdir temp && mkdir logs"
    volumes:
      - document_temp:/temp
    #   - document_logs:/logs
    depends_on:
      - document-db
      - document-rabbit
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.rack == leare-ms
        preferences:
            - spread: node.id
    networks:
      - leare-network


  # search_ms
  search-web:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-search-web:gcp
    environment:
      - ROCKET_ADDRESS=0.0.0.0
      - ROCKET_PORT=3005
      - ELASTICSEARCH_URL=http://search-db:9200
      # - ELASTICSEARCH_URL=http://elastic:password@search-db:9200
      - ES_USERNAME=elastic
      - ES_PASSWORD=password
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.rack == leare-ms
        preferences:
            - spread: node.id
    depends_on:
      - search-db
    networks:
      - leare-network

  # user_ms
  users-web:
    image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-users-web:gcp
    depends_on:
      - users-db
    environment:
      # DATABASE_URL: mysql2://root@users-db/my_app_development
      DATABASE_URL: mysql2://root:password@users-db/my_app_development
    deploy:
      replicas: 2
      placement:
        constraints:
          - node.labels.rack == leare-ms
        preferences:
            - spread: node.id
    networks:
      - leare-network


# MARK: volumes  

volumes:
  gateway_logs:
    driver: local
  esdata1:
    driver: local
  esdata2:
    driver: local
  dynamodb_data:
    driver: local
  courses_data:
    driver: local
  auth_data:
    driver: local
  chat_data:
    driver: local
  users_data:
    driver: local
  users_master:
    driver: local
  ldap_data_1:
    driver: local
  ldap_data_2:
    driver: local
  ldap_data_3:
    driver: local
  grafana-data:
    driver: local
  document_temp:
    external: true
  # document_logs:
  #   driver_opts:
  #     type: nfs
  #     o: addr=nfs-server-ip,rw
  #     device: ":/path/to/document_logs"  


networks:
  leare-network:
    external: true
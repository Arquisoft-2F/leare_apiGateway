---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\david\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f .\smallSwarm.yaml -o small.kubernetes.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: leare-gateway
  name: leare-gateway
spec:
  ports:
    - name: "5555"
      port: 5555
      targetPort: 5555
  selector:
    io.kompose.service: leare-gateway
status:
  loadBalancer: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\david\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f .\smallSwarm.yaml -o small.kubernetes.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: movil-proxy
  name: movil-proxy
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 80
    - name: "443"
      port: 443
      targetPort: 443
  selector:
    io.kompose.service: movil-proxy
status:
  loadBalancer: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\david\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f .\smallSwarm.yaml -o small.kubernetes.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: leare-gateway
  name: leare-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: leare-gateway
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\david\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f .\smallSwarm.yaml -o small.kubernetes.yaml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/k8lab-leare-network: "true"
        io.kompose.service: leare-gateway
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: rack
                    operator: In
                    values:
                      - leare-gateway
      containers:
        - image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-leare-gateway:gcp
          name: leare-gateway
          ports:
            - containerPort: 5555
              hostPort: 5555
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /app/logs
              name: gateway-logs
      restartPolicy: Always
      volumes:
        - name: gateway-logs
          persistentVolumeClaim:
            claimName: gateway-logs
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: gateway-logs
  name: gateway-logs
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\david\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f .\smallSwarm.yaml -o small.kubernetes.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: movil-proxy
  name: movil-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: movil-proxy
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\david\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f .\smallSwarm.yaml -o small.kubernetes.yaml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/k8lab-leare-network: "true"
        io.kompose.service: movil-proxy
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: rack
                    operator: In
                    values:
                      - leare-gateway
      containers:
        - image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-movil-proxy:gcp
          name: movil-proxy
          ports:
            - containerPort: 80
              hostPort: 80
              protocol: TCP
            - containerPort: 443
              hostPort: 443
              protocol: TCP
          resources: {}
      restartPolicy: Always
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\david\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f .\smallSwarm.yaml -o small.kubernetes.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: users-db
  name: users-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: users-db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\david\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f .\smallSwarm.yaml -o small.kubernetes.yaml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/k8lab-leare-network: "true"
        io.kompose.service: users-db
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: rack
                    operator: In
                    values:
                      - leare-db
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: my_app_development
            - name: MYSQL_ROOT_PASSWORD
              value: password
          image: mariadb
          name: users-db
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: users-data
      restartPolicy: Always
      volumes:
        - name: users-data
          persistentVolumeClaim:
            claimName: users-data
status: {}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: users-data
  name: users-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\david\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f .\smallSwarm.yaml -o small.kubernetes.yaml
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: users-web
  name: users-web
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: users-web
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\david\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -f .\smallSwarm.yaml -o small.kubernetes.yaml
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/k8lab-leare-network: "true"
        io.kompose.service: users-web
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: rack
                    operator: In
                    values:
                      - leare-ms
      containers:
        - env:
            - name: DATABASE_URL
              value: mysql2://root:password@users-db/my_app_development
          image: northamerica-northeast1-docker.pkg.dev/mystic-tempo-416400/leare/apigateway-users-web:gcp
          name: users-web
          resources: {}
      restartPolicy: Always
status: {}


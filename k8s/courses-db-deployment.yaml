apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\david\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe -f docker-compose.yaml convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: null
  labels:
    io.kompose.service: courses-db
  name: courses-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: courses-db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\david\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe -f docker-compose.yaml convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: null
      labels:
        io.kompose.network/k8s-leare-network: "true"
        io.kompose.service: courses-db
    spec:
      containers:
        - args:
            - -p
            - "5490"
          env:
            - name: POSTGRES_PASSWORD
              value: root
            - name: POSTGRES_PORT
              value: "5490"
          image: postgres:16.2-alpine
          name: real-courses-db
          ports:
            - containerPort: 5490
              hostPort: 5490
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: courses-db-claim0
      restartPolicy: Always
      volumes:
        - name: courses-db-claim0
          persistentVolumeClaim:
            claimName: courses-db-claim0
status: {}
